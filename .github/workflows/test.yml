name: Rust
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3.0.2
    - name: Cache Rust
      uses: actions/cache@v3.0.8
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install Rust Toolchain
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: stable
        profile: default
        components: clippy, rustfmt
    - name: Build
      run: cargo build --verbose
  fmt:
    name: Format
    runs-on: ubuntu-latest
    needs:
    - build
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3.0.2
    - name: Cache Rust
      uses: actions/cache@v3.0.8
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install Rust Toolchain
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: stable
        profile: default
        components: clippy, rustfmt
    - name: Check Format
      run: cargo fmt --check
  test:
    name: Test
    runs-on: ubuntu-latest
    needs:
    - build
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3.0.2
    - name: Cache Rust
      uses: actions/cache@v3.0.8
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install Rust Toolchain
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: stable
        profile: default
        components: clippy, rustfmt
    - name: Run Tests
      run: cargo test --verbose
